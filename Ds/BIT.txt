Fenwick / Binary index tree (1 indexed)
g(index) = index & (-index).  [ x += g(x) for update or x -= g(x) for query );
range update and point query: Add value v in (l, r) -> add(l, v) and add(r + 1, -v);
range update and range query: take two BIT B1 and B2
  define add(bit, index, value) and sum(bit, index) [normal sum and add for BIT]
  degine range_add(l, r, x)
            add(B1, l, x)
            add(B1, r+1, -x)
            add(B2, l, x*(l-1))
            add(B2, r+1, -x*r)
 define prefix_sum(idx)
          return sum(B1, idx)*idx -  sum(B2, idx)

 define range_sum(l, r):
          return prefix_sum(r) - prefix_sum(l-1)
    
